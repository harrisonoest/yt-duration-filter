name: Build Firefox Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate manifest
      run: |
        if ! python3 -c "import json; json.load(open('manifest.json'))"; then
          echo "Invalid manifest.json"
          exit 1
        fi
        echo "Manifest validation passed"
    
    - name: Check required files
      run: |
        required_files=("manifest.json" "background.js" "content.js" "popup.js" "popup.html" "content.css" "popup.css")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Missing required file: $file"
            exit 1
          fi
        done
        
        if [ ! -d "icons" ]; then
          echo "Missing icons directory"
          exit 1
        fi
        
        icon_files=("icons/icon16.png" "icons/icon48.png" "icons/icon128.png")
        for icon in "${icon_files[@]}"; do
          if [ ! -f "$icon" ]; then
            echo "Missing icon file: $icon"
            exit 1
          fi
        done
        
        echo "All required files present"
    
    - name: Create extension package
      run: |
        # Get version from manifest
        VERSION=$(python3 -c "import json; print(json.load(open('manifest.json'))['version'])")
        
        # Create package name
        PACKAGE_NAME="youtube-duration-filter-v${VERSION}.zip"
        
        # Create zip excluding unnecessary files
        zip -r "$PACKAGE_NAME" \
          manifest.json \
          background.js \
          content.js \
          content.css \
          popup.js \
          popup.html \
          popup.css \
          icons/ \
          -x "*.git*" "*.md" "*.yml" "*.yaml" "node_modules/*" "*.DS_Store"
        
        echo "Created package: $PACKAGE_NAME"
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
        
        # Verify package contents
        echo "Package contents:"
        unzip -l "$PACKAGE_NAME"
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: firefox-extension
        path: ${{ env.PACKAGE_NAME }}
        retention-days: 30
    
    - name: Upload to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.PACKAGE_NAME }}
        asset_name: ${{ env.PACKAGE_NAME }}
        asset_content_type: application/zip